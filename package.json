{
  "name": "greekstt-research-platform",
  "version": "1.0.0-academic",
  "description": "Academic research platform for Greek ASR model comparison and analysis",
  "keywords": ["greek", "asr", "academic", "research", "thesis", "comparison", "speech-recognition"],
  "author": "Academic Researcher <researcher@university.edu>",
  "license": "SEE LICENSE IN LICENSE",
  "scripts": {
    "build": "nx build",
    "test": "nx test",
    "lint": "nx workspace-lint && nx lint",
    "e2e": "nx e2e",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "nx migrate latest",
    "workspace-generator": "nx workspace-generator",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "nx": "nx",
    "_comment_academic": "=== ACADEMIC RESEARCH SCRIPTS ===",
    "academic:start": "concurrently --kill-others --prefix-colors \"bgBlue.bold,bgGreen.bold,bgMagenta.bold,bgYellow.bold\" --prefix \"[{name}]\" --names \"INFRA,BACKEND,AI,FRONTEND\" \"npm run dev:infra\" \"npm run dev:backend\" \"npm run dev:ai:auto\" \"npm run dev:frontend\"",
    "academic:setup": "npm run docker:up",
    "start-all": "node scripts/check-platform.js",
    "start-all:windows": "powershell -ExecutionPolicy Bypass -File scripts/start-all-services.ps1",
    "start-all:unix": "chmod +x scripts/start-all-services.sh && ./scripts/start-all-services.sh",
    "_comment_development": "=== DEVELOPMENT SCRIPTS ===",
    "dev": "node scripts/dev-start.js",
    "dev:all": "npx concurrently --prefix-colors \"bgGreen.bold,bgMagenta.bold,bgYellow.bold\" --prefix \"[{name}]\" --names \"BACKEND,AI,FRONTEND\" \"npm run dev:backend\" \"npm run dev:ai\" \"npm run dev:frontend\"",
    "dev:infra": "docker-compose up -d",
    "dev:backend": "wait-on tcp:5432 && docker-compose up backend",
    "dev:ai": "docker-compose up asr-service",
    "dev:frontend": "nx serve frontend --configuration development --host 0.0.0.0 --poll 2000",
    "_comment_start": "=== START INDIVIDUAL SERVICES ===",
    "start": "npm run dev",
    "start:frontend": "nx serve frontend --configuration development",
    "start:backend": "docker-compose up backend",
    "start:asr-service": "docker-compose up asr-service",
    "start:infra": "npm run dev:infra",
    "_comment_docker": "=== DOCKER MANAGEMENT ===",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:build": "docker-compose build",
    "docker:rebuild": "docker-compose down && docker-compose build --no-cache && docker-compose up -d",
    "_comment_logs": "=== SERVICE LOGS ===",
    "docker:logs": "docker-compose logs -f",
    "docker:logs:backend": "docker-compose logs -f backend",
    "docker:logs:asr": "docker-compose logs -f asr-service",
    "db:backup": "docker-compose exec db pg_dump -U postgres greekstt-research > backup-$(date +%Y%m%d-%H%M%S).sql && echo 'Backup created: backup-$(date +%Y%m%d-%H%M%S).sql'",
    "db:restore": "echo 'Usage: npm run db:restore -- backup-file.sql' && [ -n \"$npm_config_file\" ] && docker-compose exec -T db psql -U postgres greekstt-research < $npm_config_file || echo 'Please specify backup file with: npm run db:restore --file=backup.sql'",
    "docker:clean": "docker-compose down && docker system prune -f",
    "docker:destroy-all": "echo 'ðŸ’¥ WARNING: This will DESTROY ALL DATA permanently!' && docker-compose down -v && docker system prune -af",
    "_comment_stop": "=== STOP SERVICES ===",
    "stop": "docker-compose down",
    "stop:all": "docker-compose down && pkill -f 'nx serve frontend' || echo 'Frontend not running'",
    "stop:frontend": "pkill -f 'nx serve frontend' || echo 'Frontend not running'",
    "stop:backend": "docker-compose stop backend",
    "stop:asr": "docker-compose stop asr-service",
    "stop:infra": "docker-compose stop db pgadmin",
    "_comment_debug": "=== DEBUGGING HELPERS ===",
    "debug:check-ports": "lsof -i :4200 -i :5001 -i :5678 -i :8001 -i :5680 || echo 'No services running on development ports'",
    "debug:backend-attach": "echo 'Attach debugger to localhost:5678'",
    "debug:asr-attach": "echo 'Attach ASR debugger to localhost:5680'",
    "debug:test-connections": "npm run debug:check-ports",
    "debug:health": "curl -s http://localhost:8001/health && curl -s http://localhost:5001/api/health && echo 'All services healthy'",
    "_comment_database": "=== DATABASE MANAGEMENT (SAFE) ===",
    "db:migrate": "docker-compose exec backend flask db upgrade",
    "db:migration": "docker-compose exec backend flask db migrate -m",
    "db:destroy-all": "echo 'ðŸ’¥ WARNING: This will DESTROY ALL DATA permanently!' && docker-compose down db && docker volume rm greekstt-thesis_postgres_data && docker-compose up -d db && npm run db:migrate",
    "db:seed": "docker-compose exec backend python -m app.seeders",
    "db:shell": "docker-compose exec db psql -U postgres -d greekstt-research",
    "_comment_build": "=== BUILD COMMANDS ===",
    "build:libs": "nx run-many --target=build --projects=shared-models,shared-utils,shared-config",
    "build:frontend": "nx build frontend --configuration production",
    "build:all": "npm run build:libs && npm run build:frontend",
    "_comment_testing": "=== TESTING ===",
    "test:frontend": "nx test frontend",
    "test:backend": "docker-compose exec backend python -m pytest",
    "test:asr": "docker-compose exec asr-service python -m pytest",
    "test:all": "npx concurrently \"npm run test:frontend\" \"npm run test:backend\" \"npm run test:asr\"",
    "_comment_utilities": "=== UTILITIES ===",
    "clean": "nx reset && rm -rf node_modules && npm install",
    "clean:cache": "nx reset",
    "clean:deps": "rm -rf node_modules package-lock.json && npm install",
    "health": "npm run health:all",
    "health:all": "npx concurrently --prefix \"[{name}]\" --names \"FRONTEND,BACKEND,ASR\" \"curl http://localhost:4200 || echo 'Frontend down'\" \"curl http://localhost:5001/api/health || echo 'Backend down'\" \"curl http://localhost:8001/health || echo 'ASR down'\"",
    "setup": "npm install && npm run build:libs && npm run generate:keys && npm run dev:infra && sleep 5 && npm run db:migrate",
    "generate:keys": "node scripts/generate-keys.js",
    "_comment_production": "=== PRODUCTION ===",
    "prod:build": "npm run build:all && docker-compose build",
    "prod:up": "docker-compose --profile production up -d",
    "prod:down": "docker-compose --profile production down"
  },
  "private": true,
  "engines": {
    "node": "^22.16.0",
    "npm": ">=10.0.0"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^19.2.14",
    "@angular-eslint/eslint-plugin": "^19.1.0",
    "@angular-eslint/eslint-plugin-template": "^19.1.0",
    "@angular-eslint/template-parser": "^19.1.0",
    "@angular/cli": "^19.2.14",
    "@angular/compiler-cli": "^19.2.14",
    "@eslint/compat": "^1.2.4",
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.8.0",
    "@nx/angular": "21.2.0",
    "@nx/eslint": "21.2.0",
    "@nx/eslint-plugin": "21.2.0",
    "@nx/jest": "21.2.0",
    "@nx/js": "21.2.0",
    "@nx/node": "21.2.0",
    "@nx/playwright": "21.2.0",
    "@nx/web": "21.2.0",
    "@nx/workspace": "21.2.0",
    "@playwright/test": "^1.36.0",
    "@swc-node/register": "~1.9.1",
    "@swc/core": "~1.5.7",
    "@swc/helpers": "~0.5.11",
    "@types/apicache": "^1.6.7",
    "@types/express": "^4.17.17",
    "@types/file-saver": "^2.0.7",
    "@types/jasmine": "~5.1.0",
    "@types/jest": "^29.4.0",
    "@types/node": "~18.16.9",
    "@typescript-eslint/eslint-plugin": "^8.24.0",
    "@typescript-eslint/parser": "^8.24.0",
    "autoprefixer": "10.4.16",
    "concurrently": "^9.1.2",
    "cross-env": "^7.0.3",
    "eslint": "^9.20.1",
    "eslint-config-prettier": "^10.1.5",
    "eslint-import-resolver-typescript": "^4.4.3",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-prettier": "^5.2.3",
    "jasmine-core": "^5.6.0",
    "jest": "^29.4.1",
    "jest-environment-jsdom": "^29.4.1",
    "karma": "^6.4.4",
    "karma-chrome-launcher": "^3.2.0",
    "karma-coverage": "^2.2.1",
    "karma-jasmine": "^5.1.0",
    "karma-jasmine-html-reporter": "^2.1.0",
    "nodemon": "^3.1.10",
    "nx": "21.2.0",
    "postcss": "8.4.31",
    "prettier": "^3.5.1",
    "stylelint": "^16.20.0",
    "stylelint-config-standard-scss": "^15.0.1",
    "stylelint-scss": "^6.12.1",
    "tailwindcss": "3.4.17",
    "ts-jest": "^29.1.0",
    "ts-node": "10.9.1",
    "typescript": "~5.8.3",
    "wait-on": "^8.0.3"
  },
  "dependencies": {
    "@angular/animations": "^19.2.14",
    "@angular/cdk": "^19.2.14",
    "@angular/common": "^19.2.14",
    "@angular/compiler": "^19.2.14",
    "@angular/core": "^19.2.14",
    "@angular/forms": "^19.2.14",
    "@angular/platform-browser": "^19.2.14",
    "@angular/platform-browser-dynamic": "^19.2.14",
    "@angular/platform-server": "^19.2.14",
    "@angular/router": "^19.2.14",
    "@angular/ssr": "^19.2.14",
    "@primeng/themes": "^19.1.3",
    "apicache": "^1.6.3",
    "chart.js": "^4.4.8",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "file-saver": "^2.0.5",
    "helmet": "^8.0.0",
    "ngx-quill": "^27.0.1",
    "primeicons": "^7.0.0",
    "primeng": "^19.1.3",
    "quill": "^2.0.3",
    "rxjs": "~7.8.0",
    "socket.io-client": "^4.8.1",
    "tslib": "^2.3.0"
  },
  "overrides": {
    "tailwindcss": "3.4.17",
    "esbuild": "^0.25.5",
    "koa": "^2.16.1"
  }
}
